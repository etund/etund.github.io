<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: 百思不得姐，项目总结，经验 | etund喔喔喔]]></title>
  <link href="http://etund.github.com/tags/bai-si-bu-de-jie-,xiang-mu-zong-jie-,jing-yan/atom.xml" rel="self"/>
  <link href="http://etund.github.com/"/>
  <updated>2015-08-24T20:09:50+08:00</updated>
  <id>http://etund.github.com/</id>
  <author>
    <name><![CDATA[etund]]></name>
    <email><![CDATA[a925813235z@qq.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[百思不得姐-项目总结(五)]]></title>
    <link href="http://etund.github.com/blog/2015/08/22/bai-si-bu-de-jie-xiang-mu-zong-jie-wu/"/>
    <updated>2015-08-22T19:50:39+08:00</updated>
    <id>http://etund.github.com/blog/2015/08/22/bai-si-bu-de-jie-xiang-mu-zong-jie-wu</id>
    <content type="html"><![CDATA[<h3>功能模块实现(部分)</h3>

<h5>自定义UITextView</h5>

<ul>
<li>添加内容输入框。

<ul>
<li>内嵌</li>
<li>自定义UITextView

<ul>
<li>占位字符</li>
</ul>
</li>
<li>监听textView的输入值，用于去除占位字符，不能从外面监听，这是可以在内部通过通知的方式来监听。</li>
</ul>
</li>
</ul>


<!-- more -->


<ul>
<li><p>细节处理与功能扩展</p>

<ul>
<li>如何动态监测占位字符的改变。</li>
<li>如何动态监测文字大小与颜色。

<ul>
<li><code>setNeedsLayout</code>与<code>setNeedsDisplay</code>的区别

<ul>
<li><code>setNeedsLayout</code>：会在恰当的时刻调用layoutSubviews方法</li>
<li><code>setNeedsDisplay</code>：会在恰当的时刻自动调用drawRect:方法</li>
<li><code>但是上面两个方法在一些操作上有些功能重复</code></li>
<li>想使用KVC来修改该对象的值，就要用该对象来调用KVC
<code>layoutIfNeeded</code>强制布局</li>
</ul>
</li>
</ul>
</li>
<li>如果一进来UITextView就有值呢？(包括有属性的文字与无属性的文字)</li>
</ul>
</li>
<li><p><code>监听UITextView内容的改变用通知，监听UITextField的改变用代理。</code></p></li>
<li>如何在键盘上添加视图

<ul>
<li>方法一

<ul>
<li>添加键盘监听</li>
<li>将view添加到键盘视图上</li>
<li>平移视图</li>
<li>键盘下降视图脱落，添加到主视图上。</li>
</ul>
</li>
</ul>
</li>
</ul>


<h5>标签编辑界面</h5>

<ul>
<li>思路

<ul>
<li>先添加一个UITextField</li>
</ul>
</li>
<li>用UITextField还是UITextView?

<ul>
<li>由于标签比较短，下面还要添加一个按钮，前面要添加UIButton.</li>
<li>那么我们的TextField需要什么功能？

<ul>
<li>占位字符，光标。</li>
<li>实时更新UITextField的宽度。</li>
</ul>
</li>
</ul>
</li>
<li><p>如何触发确认事件</p>

<ul>
<li>包括字符:逗号,空格,回车以及点击下面的标记按钮</li>
<li>接收键盘return键，delete键</li>
</ul>
</li>
<li><p>由于重写UINavigationViewController后不能使用右滑来返回上一层，这是可以讲</p></li>
<li><p>设置一个代理为空。</p></li>
<li><p>数据回显，也就是界面传值:无非四种:block 代理，通知，单例,意思是如何让一个界面的数据在上一个界面显示。</p>

<ul>
<li>这里用block</li>
</ul>
</li>
<li>如何解决界面会跳的时候键盘覆盖原来的控件。

<ul>
<li>这是由于添加键盘监听与设置第一响应者和注销第一响应者的顺序不对。</li>
<li>在注册键盘弹出的时候要注意添加监听和去除监听前后，也就是说，在成为添加键盘监听之后注册第一响应者，在去除键盘监听之前注销第一响应者。</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[百思不得姐-项目总结(四)]]></title>
    <link href="http://etund.github.com/blog/2015/08/22/bai-si-bu-de-jie-xiang-mu-zong-jie-si/"/>
    <updated>2015-08-22T19:47:07+08:00</updated>
    <id>http://etund.github.com/blog/2015/08/22/bai-si-bu-de-jie-xiang-mu-zong-jie-si</id>
    <content type="html"><![CDATA[<h3>哪些网上找不到的经验(二)</h3>

<ul>
<li>将约束对象翻转

<ul>
<li>这样做可以让父控件随着子控件的变化而变化，而不是子控件随着父控件的变化而变化。</li>
</ul>
</li>
<li>placeholderlabel是懒加载的。

<pre><code>  - 所以利用KVC设置placeholderlabel的颜色属性的时候要placeholderlabel是否为空。
</code></pre></li>
<li>如果我们的控件从xid加载

<ul>
<li>可以在layoutsubview方法里面设置控件尺寸</li>
<li>排布子控件不管是从xib加载还是代码加载都不受控制，可以在layoutsubview里面设置</li>
</ul>
</li>
</ul>


<!-- more -->


<ul>
<li>监听键盘属性变化的时候可以把键盘先退出在重新加载

<ul>
<li>对于监听的添加，以及主动设置第一响应者和注销第一响应者的时候要注意，在view出现的时候添加监听，在消失的时候去除监听，在在监听的去除和添加之间注册和注销第一响应者。也就是在监听添加之后注册第一响应者，在监听去除之前注销第一响应者。</li>
</ul>
</li>
<li>如何在控制器的TabBar中添加按钮

<ul>
<li>可以用KVC替换TabBar然后在TabBar里面处理控件尺寸</li>
</ul>
</li>
<li>如何让图片与文字不受渲染

<ul>
<li>图片可以用[image imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal]来设置</li>
<li>文字属性可以在initialize方法里面设置，有Appearance宏的属性都可以统一设置</li>
</ul>
</li>
<li>为什么在layoutSubviews里面调用dipatch_once会失败

<ul>
<li>由于static关键字</li>
</ul>
</li>
<li>当同时多次点击添加按钮的时候会出现多次添加控制器

<ul>
<li>这是动画的造成的bug，(参考我的另外一篇博客，UINavigation日常)</li>
</ul>
</li>
<li>返回数据照片会使cell的tableView变化

<ul>
<li>只要设置了placeholder图片返回的图片绝对不会变化</li>
</ul>
</li>
<li>如何解决网络慢带来的问题

<ul>
<li>在每次点击的时候马上刷新数据</li>
</ul>
</li>
<li>让用户不要一直发请求

<ul>
<li>在分类里面把数据存储起来，判断是否要发请求。</li>
</ul>
</li>
<li>下拉刷新

<ul>
<li>由于刷新，所以每次刷新要去服务器取首页数据，把以前的数据清除掉。</li>
<li>由于每次都要上拉/下拉刷新，所以不需要判断是否有数据</li>
<li>由于每次都是要点击到其他页面才下拉刷新，所以原则上是不需要判断当前的传进去的参数与self的参数是否一致，但是以防万一数据传输过慢还是加上好。</li>
<li>不用每次刷新右控件都去检查上拉刷新</li>
<li>但是右边每次reloadData的时候都要检查是否已经加载完</li>
</ul>
</li>
<li>如何让TextField的文字显示为白色。

<ul>
<li> 可以通过attributePlaceHolder来实现</li>
<li> 可以通过kvc来实现</li>
</ul>
</li>
<li>如何让tableView显示在窗口的中间。

<ul>
<li>可以设置contentInset</li>
</ul>
</li>
<li>如何解决cell重用图片重叠的问题

<ul>
<li>原因不详：</li>
<li>解决方法，在每次添加imageView的时候移除出父控件就好。</li>
<li>每种数据样式都要把其他样式的图片给隐藏掉。</li>
</ul>
</li>
<li>如何解决刷新的时候上拉与下拉同时进行？

<ul>
<li>可以保证下拉和下拉只有一个进行，在下拉之前停了上拉，在下拉之前停掉上拉。</li>
</ul>
</li>
<li>如何快速设置已经有背景图片的按钮的大小

<ul>
<li>把button的大小设为背景图片的大小即可。</li>
<li>button.currentImage</li>
</ul>
</li>
<li>如何解决界面会跳的时候键盘覆盖原来的控件。

<ul>
<li>这是由于添加键盘监听与设置第一响应者和注销第一响应者的顺序不对。</li>
<li>在注册键盘弹出的时候要注意添加监听和去除监听前后，也就是说，在成为添加键盘监听之后注册第一响应者，在去除键盘监听之前注销第一响应者。</li>
</ul>
</li>
<li>建议用数组来代替if-else,表驱动法</li>
<li>tabelView不分组的问题？tableView分组一定要设置grop样式吗？

<ul>
<li>实现tableView的代理方法viewForHeaderInSection，要向这个方法有效，必须实现heightForHeaderInSection或者设置tableView的样式为group。</li>
</ul>
</li>
<li>如何不占内存的给项目添加圆角？

<ul>
<li>利用画图知识。</li>
</ul>
</li>
<li>用pop框架做动画，在开始之前view会默认处于默认位置。</li>
<li>换肤

<ul>
<li>设计模式

<ul>
<li>plist - 皮肤文件夹 - plist - 图片</li>
</ul>
</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[百思不得姐-项目总结(三)]]></title>
    <link href="http://etund.github.com/blog/2015/08/22/bai-si-bu-de-jie-xiang-mu-zong-jie-san/"/>
    <updated>2015-08-22T19:26:47+08:00</updated>
    <id>http://etund.github.com/blog/2015/08/22/bai-si-bu-de-jie-xiang-mu-zong-jie-san</id>
    <content type="html"><![CDATA[<h3>哪些网上找不到的经验(一)</h3>

<ul>
<li>[UIColor colorWithPatternImage:]设置颜色跟图片一致</li>
<li>属性后面有Appearance宏，都可以通过Appearance统一设置，例如：UITabarItem</li>
<li>在分类中声明Property，只会声明方法声明，不会生成方法的实现和下划线属性。</li>
<li>用imageView的initWithImage图片尺寸会与imageView一样</li>
<li>如果navbarItem里面是文件，那么item接受事件，如果是Button，那么改button接收事件</li>
<li>按住Option加回车，UILabel可以换行</li>
</ul>


<!-- more -->


<ul>
<li>判断是否第一次上拉刷新是否时已经下载完了- - 在另外一个请求发送之前把上一次请求取消

<ul>
<li>调用[self.manager.tasks makeObjectsPerformSelector:@selector(cancel)];</li>
</ul>
</li>
<li>cell空出间隔

<ul>
<li>重写cell的setFrame的值，在本身的身上加上对应的空格。</li>
<li>自定义UIView</li>
</ul>
</li>
<li>如果不想别人修改我们的frame，我们可以重写setFrame和setbounds方法,例如一些控件：UISegument。</li>
<li>从iOS7开始不再通过Application来控制状态栏，而是通过控制器来控制。

<ul>
<li>默认是通过控制器来控制状态栏的，但是可以在配置文件里面重新设置。</li>
</ul>
</li>
<li>如果指针指向数组的首元素吧指针当做数组来使用。</li>
<li>滚动条内边距

<ul>
<li> 设置tableView的self.tableView.separatorInset方法。</li>
</ul>
</li>
<li>(MJExtension)header的autoChangeAlpha属性可以设置它自动改变透明度，这样适用于我们上部控件是透明的而遮盖不了后面的header的问题。</li>
<li>没初始化的NSInteger为0</li>
<li>如果把系统帮你生成的set方法和get方法重写，会报错，因为它不会帮你生产下划线属性。

<ul>
<li>如果是readonly的，重写get方法后，也不会帮我们自动生成下划线属性，</li>
<li>简而言之，如果把property默认帮你实现的方法都重写了，那么，好吧，你那么厉害，私有属性也自己写咯，property如是说。</li>
</ul>
</li>
<li>当属性与返回数据的名字不一样的时候(MJExtension)

<ul>
<li>一般做法是在属性的实现方法做重写+ (NSDictionary *)replacedKeyFromPropertyName;方法</li>
</ul>
</li>
<li>可以在xib里面给按钮的title和imgae之间添加间隔

<ul>
<li>利用contentEdginset</li>
</ul>
</li>
<li>对于UIImageView的布局属性

<ul>
<li>fit保证看到图片全部，按照原来的宽高比进行缩放</li>
<li>fill会缩小到宽度或者高度跟imageView一样为止</li>
</ul>
</li>
<li>如果遇到要不断更改第三方框架，最好是新建一个类来继承第三方框架类。

<ul>
<li>例如进度条框架。</li>
</ul>
</li>
<li>进度条负号解决，直接替换掉-号</li>
<li>sdWebImage的下载进度是用字典存放的，key是url，value是下载operation，所以不会重复加载</li>
<li>如何保证在cell循环的时候，进度值的问题</li>
<li>把操作存储起来</li>
<li>代码实现</li>
</ul>


<pre><code class="objc"></code></pre>

<ul>
<li>版本号：0.0.0 大版本号， 功能版本号，bug版本号</li>
<li>(项目打包)第三方框架图片资源依赖

<ul>
<li>放在一个文件夹里面，后缀名是bundle</li>
<li>当加载资源的时候加上文件夹路径</li>
</ul>
</li>
<li>如何做透明动画过程中而后面的画面不能跟后面的界面交互，问题的起因是由于当我们做动画的时候要让整个view都不能接收点击事件，但我们不能接收点击事件的时候后面的controller就会接受事件，这不是我们想要的。(facebook的框架)

<ul>
<li>我们也可以让view的所有子控件在做动画过程中全部调用一个方法(不与用户交互),就可以把在控件做动画的时候后面的view后滑动的bug</li>
<li>做透明界面可以用View跟窗口</li>
<li>如何挡住状态栏，可以参考Window的级别
-sd_image有按钮专用的图片下载方法</li>
<li>给按钮设置image的时候，用专用的sd_image方法</li>
</ul>
</li>
<li>让button文字居中显示

<ul>
<li>btn.titleLabel.textAlignment = NSTextAlignmentCenter;</li>
<li>图片居中</li>
<li>内容居中 contenViewMode</li>
<li>水平居中 UIControlContentHorizontalAlignment</li>
<li>垂直居中 UIControlContentVerticalAlignment</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[百思不得姐-项目总结(二)]]></title>
    <link href="http://etund.github.com/blog/2015/08/22/bai-si-bu-de-jie-xiang-mu-zong-jie-er/"/>
    <updated>2015-08-22T19:08:55+08:00</updated>
    <id>http://etund.github.com/blog/2015/08/22/bai-si-bu-de-jie-xiang-mu-zong-jie-er</id>
    <content type="html"><![CDATA[<h3>小技巧(二)</h3>

<h4>双击菜单栏回到顶部？点击屏幕顶部回到最上面？</h4>

<ul>
<li><p>在整个应用启动的时候在应用顶部添加一个window用于点击，然后再监听这个window的点击事件。</p></li>
<li><p>自己自顶一个而一个类，继承window或者NSObject都行，然后定义一个window_成员变量。
<code>objc
window_ = [[UIWindow alloc] init];
  window_.frame = CGRectMake(0, 0, ETScreenW, 20);
  window_.windowLevel = UIWindowLevelAlert;
  [window_ addGestureRecognizer:[[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(windowClick)]];
</code></p></li>
</ul>


<!-- more -->


<ul>
<li>把全部scrollView寻找出来，在判断是否是当前界面显示的，把scrollView滑到顶部</li>
</ul>


<pre><code class="objc">//寻找全部的scrollView
+ (void)searchScrollViewInView:(UIView *)superView{
    for (UIScrollView *scroView in superView.subviews) {
        if ([scroView isKindOfClass:[UIScrollView class]]&amp;&amp;scroView.isShowingOnCurrentWindow) {
            CGPoint offSet = scroView.contentOffset;
            offSet.y = -scroView.contentInset.top;
            [scroView setContentOffset:offSet animated:YES];
        }
        [self searchScrollViewInView:scroView];
    }
}

//判断是否是当前屏幕正在显示的view
- (BOOL)isShowingOnCurrentWindow{
//   一主窗口左上角为坐标原点，计算self的矩形框
    CGRect newFrame = [ETKeyWindow convertRect:self.frame fromView:self.superview];
    CGRect winBounds = ETKeyWindow.bounds;
//    主窗口的bouns 和self的矩形框 是否有重叠
    BOOL insterects =  CGRectIntersectsRect(newFrame, winBounds);
    return !self.isHidden &amp;&amp; self.alpha &gt; 0.01 &amp;&amp; self.window==ETKeyWindow &amp;&amp; insterects;
}
</code></pre>

<ul>
<li>至于怎么双击当前底部菜单栏然后刷新页面，可以把菜单栏点击的时候记录当次点击的菜单栏，下一次在点击的时候判断是否是上一次的菜单栏，然后调用开始刷新的方法。(这个需求实现与上面方法不同的是，这个不需要获取scroolView)</li>
</ul>


<pre><code class="objc">//    在通知中心注册通知
    [ETDefaultNotificationCenter postNotificationName:ETTabBarDidSelectNotification object:nil];

//      接收通知
[ETDefaultNotificationCenter addObserver:self selector:@selector(tabBarClick) name:ETTabBarDidSelectNotification object:nil];

//      开始滚
if (self.lasetSelectIndex == self.tabBarController.selectedIndex&amp;&amp;self.view.isShowingOnCurrentWindow) {
        [self.tableView.header beginRefreshing];
    }
    self.lasetSelectIndex = self.tabBarController.selectedIndex;
</code></pre>

<h4>需求场景</h4>

<ul>
<li>(场景1.0)有这么一个需求，要在一个view的子控件modal一个带有导航栏的控制器，

<ul>
<li>解决方案：获取keyWindow的根控制器，再modal一个带有控制器的导航控制器即可</li>
</ul>
</li>
</ul>


<pre><code class="objc">[UIView animateWithDuration:1.0 animations:^{
            [[UIApplication sharedApplication].keyWindow.rootViewController presentViewController:[[ETNavContioller alloc] initWithRootViewController:[[ETPublishController alloc] init]] animated:YES completion:nil];
        }];
</code></pre>

<ul>
<li>(场景1.1)如何在一个已经modal出来的导航控制器的的跟控制器里面的一个子控制器里面push一个控制器。

<ul>
<li>知识拓展：一旦A控制器modal出B控制器，那么A的preferenceControlled就会引用着B控制器,所以可以这样做，获取当前的导航控制器，然后再获取他的presentedViewController</li>
</ul>
</li>
</ul>


<pre><code class="objc">//    获取keyWindow的keyWindow
    UIViewController *keyRootVC = ETKeyWindow.rootViewController;
//    获取keyWindowmodel出的导航栏控制器
    ETNavContioller *nav = (ETNavContioller *)keyRootVC.presentedViewController;
//
    ETTagEditController *tagEditVC = [[ETTagEditController alloc] init];
    [nav pushViewController:tagEditVC animated:YES];
</code></pre>

<ul>
<li>(场景2)如果返回的图太大，我们就要定住他的宽度，然后再根据比例把它的高计算出来，但是如果计算出来的高度也太高了，我们就要显示他的顶部的一部分，但是如果把一张长图，在一个cell里面显示指定位置的一部分，这时就需要画图技术。

<ul>
<li>把截图想象成一个窗口，窗口后面是我们想要看到的一幅画，我们想看到画的哪里，只能挪动窗口后面的画，                <code>UIGraphicsBeginImageContextWithOptions(_data.pictureF.size, YES, 0.0);</code>这句代码就是设置我们的窗口大小以及其他属性，                <code>[currentImage drawInRect:CGRectMake(0, 0, _data.pictureF.size.width,picH)];</code>而这句话是设置图片哪个位置显示在窗口上面。</li>
</ul>
</li>
</ul>


<pre><code class="objc"> UIImage *currentImage = self.contentPic.image;
 CGFloat picH = _data.pictureF.size.width * _data.height / _data.width;
                UIGraphicsBeginImageContextWithOptions(_data.pictureF.size, YES, 0.0);
                [currentImage drawInRect:CGRectMake(0, 0, _data.pictureF.size.width,picH)];
                currentImage = UIGraphicsGetImageFromCurrentImageContext();
                UIGraphicsEndImageContext();
                self.contentPic.image = currentImage;
</code></pre>

<p><code>小结：UIGraphicsBeginImageContextWithOptions(决定显示大小)，drawInRect:CGRectMake决定显示图片的一部分在窗口上。</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[百思不得姐-项目总结(一)]]></title>
    <link href="http://etund.github.com/blog/2015/08/22/bai-si-bu-de-jie-xiang-mu-zong-jie-%5B%3F%5D/"/>
    <updated>2015-08-22T18:54:55+08:00</updated>
    <id>http://etund.github.com/blog/2015/08/22/bai-si-bu-de-jie-xiang-mu-zong-jie-[?]</id>
    <content type="html"><![CDATA[<h3>前言</h3>

<ul>
<li>项目不同一般的小例子，不仅仅是知识的回顾，还是工程的封装，编程的思想，经验的总结，更多小技巧就是在项目里面摸索出来的，当然有前辈带你最好了，所以在这里感谢<a href="http://www.520it.com/index.htm">小码哥</a>的李明杰老师讲的这个小项目，我再这个项目中受益匪浅，趁现在还没忘记赶紧记下来，成为我自己的东西。</li>
<li>这个项目是一个段子类的项目，百思不得姐，一个段子软件，具体情况自己下载来玩吧。</li>
</ul>


<!-- more -->


<h3>小技巧(一)</h3>

<h4>自定义导航栏注意的地方</h4>

<ul>
<li>在iOS7之后，当我们的收在左边最边边开始往右划的时候会实现返回功能，但是当我们自定义导航栏的返回按钮的时候这个功能就会失去，这时候我们只需要可以把这样设置就好了<code>self.interactivePopGestureRecognizer.delegate = nil;</code></li>
<li>但是这样会出现在我们返回到第一个控制器的时候，在往右滑，在点击跳转，跳转不过去，解决方案

<ul>
<li>在pushViewController:animated:方法的时候设置代理的等于当前控制器是否是根控制器。</li>
<li>然后成为导航控制器的代理，然后实现其代理方法navigationController:didShowViewController:animated:在里面设置代理等于当前控制器是否是根控制器</li>
<li>核心代码</li>
</ul>
</li>
</ul>


<pre><code class="objc">    1
        self.popDelegate = self.interactivePopGestureRecognizer.delegate;
        self.delegate = self;

    2
         self.interactivePopGestureRecognizer.delegate = nil;

    3
        - (void)navigationController:(UINavigationController *)navigationController didShowViewController:(UIViewController *)viewController animated:(BOOL)animated{
        if (viewController == [self.viewControllers firstObject]) {
            self.interactivePopGestureRecognizer.delegate = self.popDelegate;
        }
}
</code></pre>

<ul>
<li>这时我们可以有更高的要求，例如我们想自定义手势，因为系统自带的手势只能从左边边界开始划，但是自定义手势的时候我们也要跟上面一样判断什么时候响应手势的触发</li>
</ul>


<pre><code class="objc">在viewDidLoad里面
UIPanGestureRecognizer *pan = [[UIPanGestureRecognizer alloc] initWithTarget:self.interactivePopGestureRecognizer.delegate action:@selector(handleNavigationTransition:)];
    pan.delegate = self;
    [self.view addGestureRecognizer:pan];

在代理方法里面
#pragma UIGestureRecognizerDelegate
- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer *)gestureRecognizer{
//    当当前控制器不是根控制器的时候可以接收
    return (self.topViewController != [self.viewControllers firstObject]);
}    
</code></pre>

<h4>时间比较</h4>

<ul>
<li>时间处理

<ul>
<li>目标：刚刚 一小时内 几时几分  昨天几时几分 几月几号几时几分 几年几月几号几时几分</li>
<li>概要：是否是今年 是否是昨天 是否是今天 是否是一个小时外 是否是一分钟外</li>
<li>优先级判断

<ul>
<li>判断是否是今年 ：年份一样？今年：去年</li>
<li>判断是否是昨天：年份一样，月份一样或相差一个月，天数相差一天或一个月</li>
<li>判断是否是今天：年份一样，月份一样，日期一样</li>
<li>判断是否是一个小时内？年份一样，月份一样，日期一样，时一样</li>
<li>判断是否是一分钟内：年份一样，月份一样，日期一样，时一样，分钟一样</li>
</ul>
</li>
<li>如何判断时间一样？

<ul>
<li>利用NSCalendar的方法来比较</li>
</ul>
</li>
<li>列几个代码</li>
</ul>
</li>
</ul>


<pre><code class="objc">//判断是否是今天
- (BOOL)isTody{
    NSDateFormatter *dfm = [[NSDateFormatter alloc] init];
    dfm.dateFormat = @"yyyy-MM-dd";
    NSString *selfDate = [dfm stringFromDate:self];
    NSString *nowDate = [dfm stringFromDate:[NSDate date]];
    return [selfDate isEqualToString:nowDate];
}

//判断是否是今年
- (BOOL)isThisYear{
    NSCalendar *calendar = [NSCalendar currentCalendar];
    NSInteger nowYear = [calendar component:NSCalendarUnitYear fromDate:[NSDate date]];
    NSInteger selfYear = [calendar component:NSCalendarUnitYear fromDate:self];
    return nowYear == selfYear;
}

//是否是昨天
- (BOOL)isYesterday{
    NSDateFormatter *dfm = [[NSDateFormatter alloc] init];
    dfm.dateFormat = @"yyyy-MM-dd";
    NSDate *selfDate = [dfm dateFromString:[dfm stringFromDate:self]];
    NSDate *nowDate = [dfm dateFromString:[dfm stringFromDate:[NSDate date]]];

    NSCalendar *calendar = [NSCalendar currentCalendar];
    NSDateComponents *contents = [calendar components:NSCalendarUnitYear|NSCalendarUnitMonth|NSCalendarUnitDay fromDate:selfDate toDate:nowDate options:0];
    return contents.year==0&amp;&amp;contents.month==0&amp;&amp;contents.day==1;
}
</code></pre>

<ul>
<li>知道是否是今年，或者今天等等后，还要返回具体要显示什么内容</li>
</ul>


<pre><code class="objc">//获取时间差
- (NSDateComponents *)getShortDateComponents{
    NSDateFormatter *dfm = [[NSDateFormatter alloc] init];
    dfm.dateFormat = @"yyyy-MM-dd HH:mm";
    dfm.timeZone = [NSTimeZone timeZoneWithName:@"Etc/GMT+8"];
    NSDate *nowDate = [dfm dateFromString:[dfm stringFromDate:[NSDate date]]];
    NSDate *selfDate  = [dfm dateFromString:[dfm stringFromDate:self]];
    NSCalendar *calendar = [NSCalendar currentCalendar];
    return [calendar components:NSCalendarUnitYear|NSCalendarUnitMonth|NSCalendarUnitDay|NSCalendarUnitHour|NSCalendarUnitMinute fromDate:selfDate toDate:nowDate options:0];
}
</code></pre>

<p>&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;未完待续</p>
]]></content>
  </entry>
  
</feed>
