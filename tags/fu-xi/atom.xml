<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: 复习 | etund喔喔喔]]></title>
  <link href="http://etund.github.com/tags/fu-xi/atom.xml" rel="self"/>
  <link href="http://etund.github.com/"/>
  <updated>2015-08-21T23:07:21+08:00</updated>
  <id>http://etund.github.com/</id>
  <author>
    <name><![CDATA[etund]]></name>
    <email><![CDATA[a925813235z@qq.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[多线程(一)]]></title>
    <link href="http://etund.github.com/blog/2015/08/21/duo-xian-cheng-%5B%3F%5D/"/>
    <updated>2015-08-21T22:13:01+08:00</updated>
    <id>http://etund.github.com/blog/2015/08/21/duo-xian-cheng-[?]</id>
    <content type="html"><![CDATA[<h4>简单回顾</h4>

<ul>
<li>iOS中多线程实现有几种方案？

<ul>
<li>首先搞清楚什么是线程，什么是多线程。</li>
<li>Mach是第一个以多线程方式处理任务的系统，因此多线程的底层实现方式是基于Mach的线程的。</li>
<li>开发中很少用Mach级的线程，因为Mach级的的线程没有提供多线程的基本特征线程之间是独立的。</li>
<li>基本实现

<ul>
<li>pthead，纯C，手动管理生命周期</li>
<li>NSThread，OC，面向对象。手动管理内存</li>
<li>GCD，纯C，自动管理生命周期，大中央调度，要理解队列与任务，任务在队列里面去除遵循先进先出的准则。</li>
<li>NSOperation,OC，基于GCD的封装，自动管理生命周期，把操作(NSOperation)放进队列(NSOperationQueue)里面，里面的额操作会异步执行。</li>
</ul>
</li>
</ul>
</li>
</ul>


<!-- more -->


<ul>
<li><p>线程间怎么通信？</p>

<ul>
<li>perfromSelectior:onThead:withObjecti:waitUntilDone:</li>
<li>NSMachPort(在RunLoop里面的source0和source1里面)</li>
</ul>
</li>
<li><p>cocoa常见的多线程实现</p>

<ul>
<li>只有在主线程刷新访问UI</li>
<li>如果要保证属性的线程安全（atomic）</li>
<li>如果一部操作要保证线程安全等问题，尽量使用GCD</li>
<li>如果想要定时器精确，用GCD定时器</li>
</ul>
</li>
<li><p>GCD内部实现</p>

<ul>
<li>iOS和OSX的黑心是XNU内核，GCD是基于XNU内核实现的</li>
<li>GCD的API全部在libdiPatch库中</li>
<li>GCD的底层实现主要有DispatchQueue和DispatchSource

<ul>
<li>DispatchQueue:管理block(操作)</li>
<li>DispatchSource:处理事件(MACH端口发送，MACH端口接收，监测与进程的事件的10种事件)</li>
</ul>
</li>
</ul>
</li>
<li><p>NSOperation相对于GCD的优点</p>

<ul>
<li>面向对象</li>
<li>封装性好</li>
<li>提供便利的方法</li>
<li>支持KVO,可以监测operation是否正在执行(isExecuted),是否结束(isFinished)，是否取消(isCancled)</li>
<li>GCD的执行速度比NSOperationQueue快</li>
<li>选择

<ul>
<li>任务需要依赖或者要监听任务的执行情况，用NSOperationQueue</li>
</ul>
</li>
<li>在使用GCD的时候要防止循环引用

<ul>
<li>ARC:_weak_unsafe_unretained</li>
<li>MRC:_block</li>
</ul>
</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
</feed>
